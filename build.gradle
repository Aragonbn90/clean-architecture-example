buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
		propDepsVersion = '0.0.8'
	}
	repositories {
		mavenCentral()

		maven {
			url 'https://plugins.gradle.org/m2/'
		}
		maven {
			url 'http://repo.spring.io/plugins-release'
		}
	}
	dependencies {
		classpath ("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath ("io.spring.gradle:propdeps-plugin:${propDepsVersion}")
	}
}

plugins {
	id "io.spring.dependency-management" version "1.0.2.RELEASE"
}

configure(allprojects) {
	apply plugin: 'java'

	apply plugin: 'propdeps'
	apply plugin: 'propdeps-maven'
	apply plugin: 'propdeps-idea'
	apply plugin: 'propdeps-eclipse'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories {
		mavenCentral()
	}
}

def frameworkAgnostic = [':application:core', ':application:adapter']
configure(subprojects - frameworkAgnostic.collect { project(it) }) {
	apply plugin: 'io.spring.dependency-management'

	dependencyManagement {
		imports {
			mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
		}
	}
}

configure([project(':application')]) {
	apply plugin: 'org.springframework.boot'
}

task wrapper(type: Wrapper) {
	gradleVersion = '3.5'
}

ext {
	versions = [
		commonsLang: '3.5',
		immutables: '2.4.6',
		jackson: '2.8.8',
		nullableJsr305: '3.0.2',
		springfoxSwagger2: '2.7.0'
	]
}

project("application") {
	description = "Application"

	dependencies {
		compile project(':application:configuration')

		optional ("org.springframework.boot:spring-boot-devtools")
	}

	springBoot {
		mainClass = 'com.example.clean.app.MainApplication'

		buildInfo {
			additionalProperties = [
					'description': "${description}"
			]
		}
	}

    // Make the System.properties available in the bootRun task.
	bootRun {
		systemProperties = System.properties
	}
}

project("application:adapter") {
	description = "Application adapter"

	dependencies {
		compile project(':application:core')

		compile ("com.fasterxml.jackson.core:jackson-core:${versions.jackson}")
		compile ("com.fasterxml.jackson.core:jackson-databind:${versions.jackson}")
		compile ("org.apache.commons:commons-lang3:${versions.commonsLang}")
	}
}

project("application:configuration") {
	description = "Application configuration"

	dependencies {
		compile project(':application:adapter')
		compile project(':application:core')
		compile project(':application:periphery:data')
		compile project(':application:periphery:web')

		compile ('org.springframework.boot:spring-boot-starter-actuator')
		compile ('org.springframework.boot:spring-boot-actuator-docs')
		compile ('org.springframework.boot:spring-boot-starter-aop')
		compile ('org.springframework.retry:spring-retry')

		compile ("com.h2database:h2")

		compile ("org.apache.commons:commons-lang3:${versions.commonsLang}")
	}
}

project("application:core") {
	description = "Application core"

	dependencies {
		compile group: 'org.apache.commons', name: 'commons-lang3', version: "${versions.commonsLang}"
		compile group: 'com.google.code.findbugs', name: 'jsr305', version: "${versions.nullableJsr305}"

		provided group: 'org.immutables', name: 'value', version: "${versions.immutables}"
	}
}

project("application:periphery:data") {
	description = "Application periphery data"

	// Need to override version to be 5.2.3 or greater so that we can use "hibernate.jdbc.time_zone: UTC"
	ext['hibernate.version'] = '5.2.9.Final'

	dependencies {
		compile project(':application:core')

		compile("org.springframework.boot:spring-boot-starter-data-jpa")
		compile ('org.springframework.boot:spring-boot-starter-actuator')
		compile ('org.springframework.boot:spring-boot-actuator-docs')
		compile("org.apache.commons:commons-lang3:${versions.commonsLang}")
	}
}

project("application:periphery:web") {
	description = "Application periphery web"

	dependencies {
		compile project(':application:adapter')

		compile ("io.springfox:springfox-swagger-ui:${versions.springfoxSwagger2}")
		compile ("io.springfox:springfox-swagger2:${versions.springfoxSwagger2}")

		compile("org.springframework.boot:spring-boot-starter-web")
		compile("org.springframework.boot:spring-boot-starter-hateoas")
		compile("org.springframework.boot:spring-boot-starter-aop")
		compile("org.springframework.data:spring-data-rest-hal-browser")
	}
}